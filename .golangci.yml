# More info on config here: https://golangci-lint.run/usage/configuration/#config-file
run:
  timeout: 1m
  issues-exit-code: 1
  tests: true
  skip-dirs:
  skip-files:

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  govet:
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  gocognit:
    min-complexity: 30
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - unlabelStmt
      - sloppyReassign
    settings:
      # don't forget to run "golangci-lint cache clean" after changes in the .go files below
      ruleguard:
      hugeParam:
        sizeThreshold: 512
      rangeValCopy:
        sizeThreshold: 512

linters:
  disable-all: true
  enable:
    # - dupl - it's very slow, enable if you really know why you need it
    - errcheck
    - goconst
    - goimports
    - gosec
    - govet
    - ineffassign
    - gosimple # part of former megacheck
    - staticcheck # part of former megacheck
    - unused # part of former megacheck
    - revive
    - typecheck
    - gocritic
    - gocognit
    - mnd # renamed from gomnd
    - prealloc
    - unparam
    - exhaustive

issues:
  exclude-use-default: false
  exclude:
    # _ instead of err checks
    - G104
    # for "public interface + private struct implementation" cases only!
    - exported func .* returns unexported type .*, which can be annoying to use
    # can be removed in the development phase
    # - (comment on exported (method|function|type|const)|should have( a package)? comment|comment should be of the form)
    # not for the active development - can be removed in the stable phase
    - should have a package comment
    - don't use an underscore in package name
    # EXC0001 errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
    - should check returned error before deferring
  exclude-rules:
    - path: _test\.go
      linters:
        - gocognit
        - gocritic
        - unparam
  max-issues-per-linter: 0
  max-same-issues: 0
